---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: git-clone
  image: public.ecr.aws/prima/drone-git:1.3-3
  environment:
    DRONE_SSH_KEY:
      from_secret: drone_ssh_key
    PLUGIN_DEPTH: 5

- name: cache-restore
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - cache-restore
  environment:
    BUCKET_NAME: prima-ci-cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  - name: docker
    path: /var/run/docker.sock
  depends_on:
  - git-clone

- name: check-secrets
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - check-secrets-grants
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  depends_on:
  - git-clone

- name: check-public-docker-images
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - check-public-docker-images
  depends_on:
  - git-clone

- name: check-roles-changes
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - check-roles-changes ecs-roles-pyxis-qa deploy/roles.yml ParameterKey=Environment,ParameterValue="qa"
  - check-roles-changes ecs-roles-pyxis-staging deploy/roles.yml ParameterKey=Environment,ParameterValue="staging"
  - check-roles-changes ecs-roles-pyxis-production deploy/roles.yml ParameterKey=Environment,ParameterValue="production"
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  depends_on:
  - git-clone

- name: build-image
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - sed -i 's/USER node/USER root/g' ./Dockerfile
  - docker build -t prima/pyxis-ci:${DRONE_COMMIT} ./
  volumes:
  - name: docker
    path: /var/run/docker.sock
  depends_on:
  - cache-restore

- name: frontend-dependencies
  image: prima/pyxis-ci:${DRONE_COMMIT}
  commands:
  - mv .fakenpmrc .npmrc
  - yarn install
  environment:
    ELM_HOME: /drone/src/.elm
    NPM_TOKEN:
      from_secret: npm_token
    YARN_CACHE_FOLDER: /drone/src/.cache
  depends_on:
  - build-image

- name: build-site
  image: prima/pyxis-ci:${DRONE_COMMIT}
  commands:
  - yarn build:site
  environment:
    ELM_HOME: /drone/src/.elm
    NPM_TOKEN:
      from_secret: npm_token
    YARN_CACHE_FOLDER: /drone/src/.cache
  depends_on:
  - frontend-dependencies

- name: cache-save
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - cache-save .cache .elm node_modules elm-stuff
  environment:
    BUCKET_NAME: prima-ci-cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  - name: docker
    path: /var/run/docker.sock
  when:
    branch:
    - master
  depends_on:
  - frontend-dependencies
  - build-site

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: ecs
  host:
    path: /etc/profile.d/ecs-credentials-endpoint

trigger:
  event:
  - push

---
kind: pipeline
name: build-qa

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: git-clone
  image: public.ecr.aws/prima/drone-git:1.3-3
  environment:
    DRONE_SSH_KEY:
      from_secret: drone_ssh_key
    PLUGIN_DEPTH: 5

- name: cache-restore
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - cache-restore
  environment:
    BUCKET_NAME: prima-ci-cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  - name: docker
    path: /var/run/docker.sock
  depends_on:
  - git-clone

- name: build-image
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - sed -i 's/USER node/USER root/g' ./Dockerfile
  - docker build -t prima/pyxis-ci:${DRONE_COMMIT} ./
  volumes:
  - name: docker
    path: /var/run/docker.sock
  depends_on:
  - cache-restore

- name: build-qa
  image: prima/pyxis-ci:${DRONE_COMMIT}
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/build qa
  environment:
    YARN_CACHE_FOLDER: /drone/src/.cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  depends_on:
  - build-image

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: ecs
  host:
    path: /etc/profile.d/ecs-credentials-endpoint

trigger:
  event:
  - promote
  target:
  - qa-it
  - qa

---
kind: pipeline
name: build-staging

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: git-clone
  image: public.ecr.aws/prima/drone-git:1.3-3
  environment:
    DRONE_SSH_KEY:
      from_secret: drone_ssh_key
    PLUGIN_DEPTH: 5

- name: cache-restore
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - cache-restore
  environment:
    BUCKET_NAME: prima-ci-cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  - name: docker
    path: /var/run/docker.sock
  depends_on:
  - git-clone

- name: build-image
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - sed -i 's/USER node/USER root/g' ./Dockerfile
  - docker build -t prima/pyxis-ci:${DRONE_COMMIT} ./
  volumes:
  - name: docker
    path: /var/run/docker.sock
  depends_on:
  - cache-restore

- name: build-staging
  image: prima/pyxis-ci:${DRONE_COMMIT}
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/build staging
  environment:
    YARN_CACHE_FOLDER: /drone/src/.cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  depends_on:
  - build-image

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: ecs
  host:
    path: /etc/profile.d/ecs-credentials-endpoint

trigger:
  branch:
  - master
  event:
  - push
  status:
  - success

depends_on:
- default

---
kind: pipeline
name: build-production

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: git-clone
  image: public.ecr.aws/prima/drone-git:1.3-3
  environment:
    DRONE_SSH_KEY:
      from_secret: drone_ssh_key
    PLUGIN_DEPTH: 5

- name: cache-restore
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - cache-restore
  environment:
    BUCKET_NAME: prima-ci-cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  - name: docker
    path: /var/run/docker.sock
  depends_on:
  - git-clone

- name: build-image
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - sed -i 's/USER node/USER root/g' ./Dockerfile
  - docker build -t prima/pyxis-ci:${DRONE_COMMIT} ./
  volumes:
  - name: docker
    path: /var/run/docker.sock
  depends_on:
  - cache-restore

- name: build-production
  image: prima/pyxis-ci:${DRONE_COMMIT}
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/build production
  environment:
    YARN_CACHE_FOLDER: /drone/src/.cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  depends_on:
  - build-image

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: ecs
  host:
    path: /etc/profile.d/ecs-credentials-endpoint

trigger:
  event:
  - tag
  ref:
  - refs/tags/*.*.*

---
kind: pipeline
name: deploy-it-qa

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: git-clone
  image: public.ecr.aws/prima/drone-git:1.3-3
  environment:
    DRONE_SSH_KEY:
      from_secret: drone_ssh_key
    PLUGIN_DEPTH: 5

- name: pre-start
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - pre-start-scripts
  depends_on:
  - git-clone

- name: deploy
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/deploy-it qa
  environment:
    ELM_HOME: /drone/src/.elm
    NPM_TOKEN:
      from_secret: npm_token
    YARN_CACHE_FOLDER: /drone/src/.cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  depends_on:
  - pre-start

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: ecs
  host:
    path: /etc/profile.d/ecs-credentials-endpoint

trigger:
  event:
  - promote
  target:
  - qa-it
  - qa-stack

depends_on:
- build-qa

---
kind: pipeline
name: qainit-it

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: update-status
  image: public.ecr.aws/prima/drone-webhook
  settings:
    method: GET
    signature-secret:
      from_secret: qainitevo_secret
    urls: ${QAINIT_DRONEAPI_URL}?hash=${HASH}&status=${DRONE_BUILD_STATUS}&name=pyxis

trigger:
  status:
  - failure
  - success
  target:
  - qa-it

depends_on:
- deploy-it-qa

---
kind: pipeline
name: deploy-it-staging

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: git-clone
  image: public.ecr.aws/prima/drone-git:1.3-3
  environment:
    DRONE_SSH_KEY:
      from_secret: drone_ssh_key
    PLUGIN_DEPTH: 5

- name: pre-start
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - pre-start-scripts
  depends_on:
  - git-clone

- name: deploy
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/deploy-it staging
  environment:
    ELM_HOME: /drone/src/.elm
    NPM_TOKEN:
      from_secret: npm_token
    YARN_CACHE_FOLDER: /drone/src/.cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  depends_on:
  - pre-start

- name: captainhook-notification
  image: public.ecr.aws/prima/drone-webhook
  settings:
    signature-secret:
      from_secret: captainhook_secret
    urls: http://captainhook-internal.prima.it/drone/deploy?rollback=${ROLLBACK}
  depends_on:
  - deploy

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: ecs
  host:
    path: /etc/profile.d/ecs-credentials-endpoint

trigger:
  branch:
  - master
  event:
  - push
  status:
  - success

depends_on:
- build-staging

---
kind: pipeline
name: wait-for-artifact-it

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: git-clone
  image: public.ecr.aws/prima/drone-git:1.3-3
  environment:
    DRONE_SSH_KEY:
      from_secret: drone_ssh_key
    PLUGIN_DEPTH: 5

- name: wait-for-artifact
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/deploy-it production --wait-for-artifact
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: ecs
  host:
    path: /etc/profile.d/ecs-credentials-endpoint

trigger:
  event:
  - promote
  target:
  - deploy-it-production

---
kind: pipeline
name: deploy-it-production

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: git-clone
  image: public.ecr.aws/prima/drone-git:1.3-3
  environment:
    DRONE_SSH_KEY:
      from_secret: drone_ssh_key
    PLUGIN_DEPTH: 5

- name: pre-start
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - pre-start-scripts
  depends_on:
  - git-clone

- name: deploy
  image: public.ecr.aws/prima/drone-tools:1.21.2
  commands:
  - . /etc/profile.d/ecs-credentials-endpoint
  - ./deploy/deploy-it production
  environment:
    ELM_HOME: /drone/src/.elm
    NPM_TOKEN:
      from_secret: npm_token
    YARN_CACHE_FOLDER: /drone/src/.cache
  volumes:
  - name: ecs
    path: /etc/profile.d/ecs-credentials-endpoint
  depends_on:
  - pre-start

- name: captainhook-notification
  image: public.ecr.aws/prima/drone-webhook
  settings:
    signature-secret:
      from_secret: captainhook_secret
    urls: http://captainhook-internal.prima.it/drone/deploy?rollback=${ROLLBACK}
  depends_on:
  - deploy

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: ecs
  host:
    path: /etc/profile.d/ecs-credentials-endpoint

trigger:
  event:
  - promote
  target:
  - deploy-it-production

depends_on:
- wait-for-artifact-it

---
kind: pipeline
name: email-failure

platform:
  os: linux
  arch: amd64

clone:
  disable: true

steps:
- name: email-failure
  image: public.ecr.aws/prima/drone-email
  settings:
    from: drone@prima.it
    host: email-smtp.eu-west-1.amazonaws.com
  environment:
    PLUGIN_PASSWORD:
      from_secret: email_password
    PLUGIN_USERNAME:
      from_secret: email_username

trigger:
  status:
  - failure
  target:
    exclude:
    - qa-stack
    - qa-it
    - qa

depends_on:
- default
- build-qa
- build-staging
- build-production
- deploy-it-qa
- deploy-it-staging
- deploy-it-production

---
kind: signature
hmac: f8e6767aa478961e21546016a93cd7ce6cfb7c71c53afeeeffe4ff8df06ef531

...
